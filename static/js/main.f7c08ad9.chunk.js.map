{"version":3,"sources":["context/pomodoro-context.js","components/Break.js","components/Session.js","components/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["PomodoroContext","React","createContext","Break","useContext","breakLength","setBreakLength","isRunning","useState","decrementDisabled","setDrecementDisabled","incrementDisabled","setIncrementDisabled","id","className","disabled","onClick","Session","sessionLength","setSessionLength","Timer","setIsRunning","timerLabel","setTimerLabel","Audio","audio","setAudio","minutes","setMinutes","seconds","setSeconds","useEffect","timeout","setTimeout","clearTimeout","play","style","textAlign","pause","currentTime","ref","src","App","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7c08ad9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PomodoroContext = React.createContext()\r\n\r\nexport default PomodoroContext\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport PomodoroContext from '../context/pomodoro-context'\r\n\r\nexport const Break = ({}) => {\r\n  const { breakLength, setBreakLength, isRunning } = useContext(PomodoroContext)\r\n  const [decrementDisabled, setDrecementDisabled] = useState(breakLength === 1)\r\n  const [incrementDisabled, setIncrementDisabled] = useState(false)\r\n\r\n  const handleDecrement = () => {\r\n    if (!isRunning) {\r\n      if (breakLength - 1 === 1) {\r\n        setBreakLength(breakLength - 1)\r\n        setDrecementDisabled(true)\r\n      } else {\r\n        setBreakLength(breakLength - 1)\r\n        setDrecementDisabled(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleIncrement = () => {\r\n    if (!isRunning) {\r\n      if (breakLength + 1 >= 2) {\r\n        setBreakLength(breakLength + 1)\r\n        setDrecementDisabled(false)\r\n      } else if (breakLength + 1 === 60) {\r\n        setBreakLength(breakLength + 1)\r\n        setIncrementDisabled(true)\r\n      } else {\r\n        setBreakLength(breakLength + 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p id=\"break-label\">Break Length: {breakLength}</p>\r\n      <button\r\n        id=\"break-decrement\"\r\n        className=\"decrement\"\r\n        disabled={breakLength <= 1 ? true : decrementDisabled}\r\n        onClick={handleDecrement}\r\n      >\r\n        -\r\n      </button>\r\n      <button\r\n        id=\"break-increment\"\r\n        className=\"increment\"\r\n        disabled={breakLength >= 60 ? true : incrementDisabled}\r\n        onClick={handleIncrement}\r\n      >\r\n        +\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport PomodoroContext from '../context/pomodoro-context'\r\nimport '../App.css'\r\n\r\nexport const Session = ({}) => {\r\n  const { sessionLength, setSessionLength, isRunning } = useContext(\r\n    PomodoroContext,\r\n  )\r\n  const [decrementDisabled, setDrecementDisabled] = useState(false)\r\n  const [incrementDisabled, setIncrementDisabled] = useState(false)\r\n\r\n  const handleDecrement = () => {\r\n    if (!isRunning) {\r\n      if (sessionLength - 1 < 1) {\r\n        setSessionLength(sessionLength - 1)\r\n        setDrecementDisabled(true)\r\n      } else {\r\n        setSessionLength(sessionLength - 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleIncrement = () => {\r\n    if (!isRunning) {\r\n      if (sessionLength + 1 === 2) {\r\n        setSessionLength(sessionLength + 1)\r\n        setDrecementDisabled(false)\r\n      } else if (sessionLength + 1 === 60) {\r\n        setSessionLength(sessionLength + 1)\r\n        setIncrementDisabled(true)\r\n      } else {\r\n        setSessionLength(sessionLength + 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p id=\"session-label\">Session Length: {sessionLength}</p>\r\n      <button\r\n        id=\"session-decrement\"\r\n        className=\"decrement\"\r\n        disabled={sessionLength <= 1 ? true : decrementDisabled}\r\n        onClick={handleDecrement}\r\n      >\r\n        -\r\n      </button>\r\n      <button\r\n        id=\"session-increment\"\r\n        className=\"increment\"\r\n        disabled={sessionLength >= 60 ? true : incrementDisabled}\r\n        onClick={handleIncrement}\r\n      >\r\n        +\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport PomodoroContext from '../context/pomodoro-context'\r\nimport '../styles/Timer.css'\r\n\r\nexport default function Timer({}) {\r\n  const {\r\n    sessionLength,\r\n    setSessionLength,\r\n    breakLength,\r\n    setBreakLength,\r\n    isRunning,\r\n    setIsRunning,\r\n  } = useContext(PomodoroContext)\r\n\r\n  const [timerLabel, setTimerLabel] = useState('Session')\r\n  const [audio, setAudio] = useState(new Audio())\r\n  const [minutes, setMinutes] = useState(sessionLength)\r\n  const [seconds, setSeconds] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if (timerLabel === 'Session') {\r\n      setMinutes(sessionLength)\r\n      setSeconds(0)\r\n    } else {\r\n      setMinutes(breakLength)\r\n      setSeconds(0)\r\n    }\r\n  }, [sessionLength, breakLength])\r\n\r\n  useEffect(() => {\r\n    if (isRunning) {\r\n      let timeout = setTimeout(() => {\r\n        if (minutes > 0) {\r\n          if (seconds === 0) {\r\n            setMinutes(minutes - 1)\r\n            setSeconds(59)\r\n          } else {\r\n            setSeconds(seconds - 1)\r\n          }\r\n        }\r\n        if (minutes === 0) {\r\n          if (seconds === 0) {\r\n            clearTimeout(timeout)\r\n            audio.play()\r\n            switchTimer()\r\n          } else {\r\n            setSeconds(seconds - 1)\r\n          }\r\n        }\r\n      }, 1000)\r\n      return () => {\r\n        clearTimeout(timeout)\r\n      }\r\n    }\r\n  })\r\n\r\n  function switchTimer() {\r\n    if (timerLabel === 'Session') {\r\n      setTimerLabel('Break')\r\n      setMinutes(breakLength)\r\n    } else {\r\n      setTimerLabel('Session')\r\n      setMinutes(sessionLength)\r\n    }\r\n  }\r\n\r\n  function handleStartStop() {\r\n    setIsRunning(!isRunning)\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h2 id=\"timer-label\">{timerLabel}</h2>\r\n      <div id=\"time-left\">\r\n        <span>{minutes <= 9 && 0}</span>\r\n        <span>{minutes}</span>:<span>{seconds <= 9 && 0}</span>\r\n        <span>{seconds}</span>\r\n      </div>\r\n      <button id=\"start_stop\" onClick={handleStartStop}>\r\n        Start/Pause\r\n      </button>\r\n      <button\r\n        id=\"reset\"\r\n        onClick={() => {\r\n          audio.pause()\r\n          audio.currentTime = 0\r\n          setTimerLabel('Session')\r\n          setMinutes(25)\r\n          setSeconds(0)\r\n          setSessionLength(25)\r\n          setBreakLength(5)\r\n          setIsRunning(false)\r\n        }}\r\n      >\r\n        Restart\r\n      </button>\r\n      <audio\r\n        id=\"beep\"\r\n        ref={(audio) => setAudio(audio)}\r\n        src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n      ></audio>\r\n    </div>\r\n  )\r\n}\r\n","import './App.css'\nimport { Break } from './components/Break'\nimport { Session } from './components/Session'\nimport { useState } from 'react'\nimport PomodoroContext from './context/pomodoro-context'\nimport Timer from './components/Timer'\n\nfunction App() {\n  const [sessionLength, setSessionLength] = useState(25)\n  const [breakLength, setBreakLength] = useState(5)\n  const [isRunning, setIsRunning] = useState(false)\n\n  return (\n    <div className=\"App\">\n      <PomodoroContext.Provider\n        value={{\n          sessionLength,\n          setSessionLength,\n          breakLength,\n          setBreakLength,\n          isRunning,\n          setIsRunning,\n        }}\n      >\n        <h1>Pomodoro Clock</h1>\n        <div className=\"clock\">\n          <Timer />\n          <div className=\"break-session\">\n            <Break />\n            <Session />\n          </div>\n        </div>\n\n        <footer>Created by Izan Huang</footer>\n      </PomodoroContext.Provider>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}